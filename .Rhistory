fillOpacity = 0,
label = ~label
) %>%
addPolygons(
fillOpacity = .7,
color = ~candidate,
weight = 1,
label = ~label
) %>%
addLegend(position = 'topright',
colors = c('#6baed6', '#08519c'),
labels = c('New Candidate', 'Incumbent'))
library(leaflet)
house_plan_hcs %>%
left_join(can_tbl) %>%
replace_na(list(candidate = 'white')) %>%
leaflet() %>%
addTiles() %>%
addPolygons(
weight = 2,
opacity = 1,
color = "black",
fillOpacity = 0,
label = ~label
) %>%
addPolygons(
fillOpacity = .7,
color = ~candidate,
weight = 1,
label = ~label
) %>%
addLegend(position = 'topright',
colors = c('#6baed6', '#08519c'),
labels = c('New Candidate', 'Incumbent'))
library(sf)
house_plan_hcs %>%
left_join(can_tbl) %>%
replace_na(list(candidate = 'white')) %>%
leaflet() %>%
addTiles() %>%
addPolygons(
weight = 2,
opacity = 1,
color = "black",
fillOpacity = 0,
label = ~label
) %>%
addPolygons(
fillOpacity = .7,
color = ~candidate,
weight = 1,
label = ~label
) %>%
addLegend(position = 'topright',
colors = c('#6baed6', '#08519c'),
labels = c('New Candidate', 'Incumbent'))
leaflet() %>%
addTiles() %>%
addPolygons(data = house_plan_hcs,
group = '2022 HCS',
weight = 2,
opacity = 1,
color = "black",
fillOpacity = 0,
label = ~district) %>%
addPolygons(data = house_plan,
group = '2022 Original Bill',
weight = 2,
opacity = 1,
color = "green",
fillOpacity = 0,
label = ~district) %>%
addPolygons(data = house_plan_dem,
group = '2022 Democratic Plan',
weight = 2,
opacity = 1,
color = "blue",
fillOpacity = 0,
label = ~district)%>%
addPolygons(data = house_2014,
group = '2014',
weight = 2,
opacity = 1,
color = "red",
fillOpacity = 0,
label = ~DISTRICT) %>%
addLayersControl(
overlayGroups = c('2022 HCS', '2022 Original Bill', '2022 Democratic Plan', '2014'),
options = layersControlOptions(collapsed = FALSE)
) %>%
hideGroup(c('2022 Original Bill', '2022 Democratic Plan', '2014'))
library(tidyverse)
library(pool)
db <- pool::dbPool(odbc::odbc(),
.connection_string = "Driver={PostgreSQL ANSI};",
Database = "kypolitics")
ky_precincts <- readr::read_rds('/srv/data/shapefiles/precincts.rds')
ky_precincts
library(sf)
ky_precincts
ky_precincts %>% filter(VTDST == '00G126')
ky_precincts %>% filter(VTDST == '00G126') %>% leaflet()
library(leaflet())
library(leaflet)
ky_precincts %>% filter(VTDST == '00G126') %>% leaflet()
ky_precincts %>% filter(VTDST == '00G126') %>% leaflet() %>% addTiles()
ky_precincts %>% filter(VTDST == '00G126') %>% leaflet() %>% addTiles() %>% addPolygons()
library(tidyverse)
library(pool)
library(lubridate)
db <- pool::dbPool(odbc::odbc(),
.connection_string = "Driver={PostgreSQL ANSI};",
Database = "kypolitics")
contrib <- read_csv('/srv/data/gov_23_contrib_07072022.csv')
expend <- read_csv('/srv/data/gov_23_expend_07072022.csv')
View(contrib)
library(janitor)
contrib <- read_csv('/srv/data/gov_23_contrib_07072022.csv') %>% clean_names()
expend <- read_csv('/srv/data/gov_23_expend_07072022.csv') %>% clean_names()
glimpse(contrib)
contrib <- read_csv('/srv/data/gov_23_contrib_07072022.csv') %>%
clean_names() %>%
mutate(across(election_date, receipt_date, as.Date()))
?across
contrib <- read_csv('/srv/data/gov_23_contrib_07072022.csv') %>%
clean_names() %>%
mutate(across(election_date, receipt_date, ~as.Date))
contrib <- read_csv('/srv/data/gov_23_contrib_07072022.csv') %>%
clean_names() %>%
mutate(across(list(election_date, receipt_date), ~as.Date))
contrib <- read_csv('/srv/data/gov_23_contrib_07072022.csv') %>%
clean_names() %>%
mutate(across(c(election_date, receipt_date), as.Date))
contrib <- read_csv('/srv/data/gov_23_contrib_07072022.csv') %>%
clean_names() %>%
mutate(across(c(election_date, receipt_date), mdy))
View(contrib)
read_csv('/srv/data/gov_23_contrib_07072022.csv') %>%
clean_names()
read_csv('/srv/data/gov_23_contrib_07072022.csv') %>%
clean_names() %>% glimpse()
contrib <- read_csv('/srv/data/gov_23_contrib_07072022.csv') %>%
clean_names() %>%
mutate(election_date = mdy(election_date),
receipt_date = as.Date(mdy_hms(receipt_date))))
contrib <- read_csv('/srv/data/gov_23_contrib_07072022.csv') %>%
clean_names() %>%
mutate(election_date = mdy(election_date),
receipt_date = as.Date(mdy_hms(receipt_date)))
View(contrib)
View(expend)
glimpse(expend)
expend <- read_csv('/srv/data/gov_23_expend_07072022.csv') %>%
clean_names() %>%
mutate(across(c(election_date, disbursement_date), ~mdy_hms))
expend <- read_csv('/srv/data/gov_23_expend_07072022.csv') %>%
clean_names() %>%
mutate(across(c(election_date, disbursement_date), mdy_hms))
View(expend)
glimpse(contrib)
contrib <- read_csv('/srv/data/gov_23_contrib_07072022.csv') %>%
clean_names() %>%
mutate(election_date = mdy(election_date),
receipt_date = as.Date(mdy_hms(receipt_date)),
candidate = paste(str_to_upper(recipient_last_name), str_to_upper(recipient_first_name), sep = '_'))
View(contrib)
glimpse(expend)
expend <- read_csv('/srv/data/gov_23_expend_07072022.csv') %>%
clean_names() %>%
mutate(across(c(election_date, disbursement_date), mdy_hms),
candidate = paste(str_to_upper(from_candidate_last_name), str_to_upper(from_candidate_first_name), sep = '_'))
glimpse(contrib)
dbWriteTable(db, 'fundraising_contrib', contrib, overwrite = TRUE, temporary = F,
indexes = c('election_date', 'candidate'))
dbWriteTable(db, 'fundraising_expend', expend, overwrite = TRUE, temporary = F,
indexes = c('election_date', 'candidate'))
library(tidyverse)
library(pool)
library(lubridate)
db <- pool::dbPool(odbc::odbc(),
.connection_string = "Driver={PostgreSQL ANSI};",
Database = "kypolitics")
tbl(db, 'site_visit_history') %>%
collect() %>%
mutate(day = as.Date(time %m-% hours(5))) %>%
count(day) %>%
arrange(day) %>%
ggplot(aes(x = day, y = n, label = n)) +
geom_col() +
geom_label()
tbl(db, 'site_visit_history') %>%
collect() %>%
mutate(day = as.Date(time %m-% hours(5))) %>%
count(day) %>%
arrange(day) %>%
filter(day > '2022-05-01') %>%
ggplot(aes(x = day, y = n, label = n)) +
geom_col() +
geom_label()
tbl(db, 'site_visit_history') %>%
collect() %>%
mutate(day = as.Date(time %m-% hours(5))) %>%
count(day) %>%
arrange(day) %>%
filter(day > '2022-05-01') %>%
ggplot(aes(x = day, y = n, label = n)) +
geom_col() +
geom_label()
tbl(db, 'fundraising_contrib')
contrib_22 <- read_csv('/srv/data/primary_22_contribu_07142022.csv')
contrib_22 <- read_csv('/srv/data/primary_22_contrib_07142022.csv')
clean_data <- function(df){
df %>%
clean_names() %>%
mutate(election_date = mdy(election_date),
receipt_date = as.Date(mdy_hms(receipt_date)),
candidate = paste(str_to_upper(recipient_last_name), str_to_upper(recipient_first_name), sep = '_'))
}
contrib_23 <- read_csv('/srv/data/gov_23_contrib_07072022.csv') %>%
clean_data()
library(tidyverse)
library(pool)
library(lubridate)
library(janitor)
clean_data <- function(df){
df %>%
clean_names() %>%
mutate(election_date = mdy(election_date),
receipt_date = as.Date(mdy_hms(receipt_date)),
candidate = paste(str_to_upper(recipient_last_name), str_to_upper(recipient_first_name), sep = '_'))
}
contrib_23 <- read_csv('/srv/data/gov_23_contrib_07072022.csv') %>%
clean_data()
contrib_22 <- read_csv('/srv/data/primary_22_contrib_07142022.csv') %>%
clean_data()
expend_22 <- read_csv('/srv/data/primary_22_expend_07142022.csv') %>%
clean_data()
clean_contrib <- function(df){
df %>%
clean_names() %>%
mutate(election_date = mdy(election_date),
receipt_date = as.Date(mdy_hms(receipt_date)),
candidate = paste(str_to_upper(recipient_last_name), str_to_upper(recipient_first_name), sep = '_'))
}
clean_expend <- function(df){
df %>%
clean_names() %>%
mutate(across(c(election_date, disbursement_date), mdy_hms),
candidate = paste(str_to_upper(from_candidate_last_name), str_to_upper(from_candidate_first_name), sep = '_'))
}
contrib_23 <- read_csv('/srv/data/gov_23_contrib_07072022.csv') %>%
clean_contrib()
expend_23 <- read_csv('/srv/data/gov_23_expend_07072022.csv') %>%
clean_expend()
contrib_22 <- read_csv('/srv/data/primary_22_contrib_07142022.csv') %>%
clean_contrib()
expend_22 <- read_csv('/srv/data/primary_22_expend_07142022.csv') %>%
clean_expend()
expend_22
contrib <- bind_rows(contrib_23, contrib_22)
expend <- bind_rows(expend_23, expend_22)
View(contrib)
contrib %>% coun(office_sought)
contrib %>% count(office_sought)
dbWriteTable(db, 'fundraising_contrib', contrib, overwrite = TRUE, temporary = F,
indexes = c('election_date', 'candidate'))
dbWriteTable(db, 'fundraising_expend', expend, overwrite = TRUE, temporary = F,
indexes = c('election_date', 'candidate'))
library(tidyverse)
library(pool)
library(lubridate)
library(janitor)
db <- pool::dbPool(odbc::odbc(),
.connection_string = "Driver={PostgreSQL ANSI};",
Database = "kypolitics")
clean_contrib <- function(df){
df %>%
clean_names() %>%
mutate(election_date = mdy(election_date),
receipt_date = as.Date(mdy_hms(receipt_date)),
candidate = paste(str_to_upper(recipient_last_name), str_to_upper(recipient_first_name), sep = '_'))
}
clean_expend <- function(df){
df %>%
clean_names() %>%
mutate(across(c(election_date, disbursement_date), mdy_hms),
candidate = paste(str_to_upper(from_candidate_last_name), str_to_upper(from_candidate_first_name), sep = '_'))
}
contrib_23 <- read_csv('/srv/data/gov_23_contrib_07072022.csv') %>%
clean_contrib()
expend_23 <- read_csv('/srv/data/gov_23_expend_07072022.csv') %>%
clean_expend()
contrib_22 <- read_csv('/srv/data/primary_22_contrib_07142022.csv') %>%
clean_contrib()
expend_22 <- read_csv('/srv/data/primary_22_expend_07142022.csv') %>%
clean_expend()
contrib <- bind_rows(contrib_23, contrib_22)
expend <- bind_rows(expend_23, expend_22)
glimpse(expend)
expend %>% filter(recipient_first_name == 'Virginia', recipient_last_name == 'Woodward')
expend %>% filter(recipient_first_name == 'Virginia', recipient_last_name == 'Woodward') %>% View()
expend %>% filter(recipient_first_name == 'Virginia', recipient_last_name == 'Woodward') %>% group_by(candidate) %>% summarize(amt = sum(disbursement_amount))
expend %>% filter(recipient_first_name == 'Virginia', recipient_last_name == 'Woodward') %>% group_by(candidate) %>% summarize(amt = sum(disbursement_amount)) %>% arrange(desc(amt))
expend %>% filter(recipient_first_name == 'Beth', recipient_last_name == 'Thorpe') %>% group_by(candidate) %>% summarize(amt = sum(disbursement_amount)) %>% arrange(desc(amt))
library(tidyverse)
library(pool)
db <- pool::dbPool(odbc::odbc(),
.connection_string = "Driver={PostgreSQL ANSI};",
Database = "kypolitics")
prev <- tbl(db, 'election_data') %>% collect()
prev <- read_csv('/srv/data/replace_db.csv')
glimpse(prev)
prev %>% count(year, election)
new <- read_csv('/srv/data/general-consolidated-2022.csv')
edited <- new %>%
mutate(county = str_remove_all(county, '\\sCounty') %>% str_to_lower(),
party = case_when(party == 2 ~ 'REP',
party == 1 ~ 'DEM',
T ~ as.character(party))) %>%
rename(Precinct = precinct) %>%
mutate(year = 2022,
election = 'general')
edited_two_party <- edited %>%
filter(party %in% c('REP', 'DEM'))
edited_ind <- edited %>%
filter(!party %in% c('REP', 'DEM'))
ind_crosswalk <- edited_ind %>%
select(race, candidate) %>%
distinct() %>%
group_by(race) %>%
mutate(index = 1:n()) %>%
mutate(party = paste0('IND', index)) %>%
select(-index)
edited_ind_w_party <- edited_ind %>%
select(-party) %>%
left_join(ind_crosswalk)
edited_complete <- bind_rows(edited_two_party, edited_ind_w_party) %>% rename(votes = vote)
edited_complete %>% count(party)
prev_not_ind <- prev %>%
filter(party != 'IND')
prev_ind <- prev %>%
filter(party == 'IND')
prev_ind_crosswalk <- prev_ind %>%
select(year, county, race, candidate) %>%
distinct() %>%
group_by(year, county, race) %>%
mutate(index = 1:n()) %>%
mutate(party = paste0('IND', index)) %>%
select(-index)
prev_ind_w_party <- prev_ind %>%
select(-party) %>%
left_join(prev_ind_crosswalk)
prev_ind_w_party %>% filter(party == 'IND22') %>% pull(race) %>% unique()
prev_new <- bind_rows(prev_not_ind, prev_ind_w_party)
prev_new %>% count(party)
replace_elections <- bind_rows(prev_new, edited_complete)
replace_elections
write_csv(replace_elections, '/srv/data/replace_db.csv')
# dbWriteTable(db, 'ky_zip_county', ky_zip_coun, overwrite = TRUE, temporary = F)
dbWriteTable(db, 'election_data', replace_elections, temporary = FALSE, overwrite = TRUE, indexes = list('year','county','race','election', 'party'))
library(tidyverse)
library(pool)
db <- pool::dbPool(odbc::odbc(),
.connection_string = "Driver={PostgreSQL ANSI};",
Database = "kypolitics")
library(sf)
library(leaflet)
ky_precincts <- readr::read_rds('/srv/data/shapefiles/precincts.rds')
ky_precincts_22 <- readr::read_rds('/srv/data/shapefiles/ky_shp_new_lou.rds')
pol_pal_xl <- function(party, pct){
case_when(party == 'REP' & pct > .8 ~ '#99000d',
party == 'REP' & pct > .75 ~ '#cb181d',
party == 'REP' & pct > .7 ~ '#ef3b2c',
party == 'REP' & pct > .65 ~ '#fb6a4a',
party == 'REP' & pct > .6 ~ '#fc9272',
party == 'REP' & pct > .55 ~ '#fcbba1',
party == 'REP' & pct > .5 ~ '#fee0d2',
party == 'REP' ~ '#fff5f0',
party == 'DEM' & pct > .8 ~ '#084594',
party == 'DEM' & pct > .75 ~ '#2171b5',
party == 'DEM' & pct > .7 ~ '#4292c6',
party == 'DEM' & pct > .65 ~ '#6baed6',
party == 'DEM' & pct > .6 ~ '#9ecae1',
party == 'DEM' & pct > .55 ~ '#c6dbef',
party == 'DEM' & pct > .5 ~ '#deebf7',
party == 'DEM' ~ '#f7fbff',
party == 'IND1' & pct >  .8  ~ '#6a51a3',
party == 'IND1' & pct >  .65 ~ '#9e9ac8',
party == 'IND1' & pct >  .5 ~ '#cbc9e2',
party == 'IND1' & pct < .5  ~ '#f2f0f7',
party == 'IND2' & pct <  .8  ~ '#d94701',
party == 'IND2' & pct >  .65 ~ '#fd8d3c',
party == 'IND2' & pct >  .5  ~ '#fdbe85',
party == 'IND2' & pct <  .5  ~ '#feedde',
party == 'IND3' & pct >  .8  ~ '#238b45',
party == 'IND3' & pct >  .65 ~ '#74c476',
party == 'IND3' & pct >  .5  ~ '#bae4b3',
party == 'IND3' & pct <  .5  ~ '#edf8e9',
party == 'IND4' & pct >  .8  ~ '#ce1256',
party == 'IND4' & pct >  .65 ~ '#df65b0',
party == 'IND4' & pct >  .5  ~ '#d7b5d8',
party == 'IND4' & pct <  .5  ~ '#f1eef6',
T ~ 'white')
}
map_data_init <- tbl(db, 'election_data') %>%
filter(year == 2022,
election == 'general',
race == 'SCHOOL BOARD DISTRICT 3 District 3') %>%
collect()
map_data_init
tbl_dta <- map_data_init
map_data_long_chk <- tbl_dta
precinct_num <- map_data_long_chk %>%
select(county, Precinct) %>%
distinct() %>%
nrow()
precinct_num
map_data_long <- map_data_long_chk %>%
nest(data = c(-Precinct, -county, -race)) %>%
mutate(winner = map_chr(data, function(x){
winner <- x %>%
filter(votes == max(votes)) %>%
pull(party)
if(length(winner) == 1){
winner
}else{
'Tie'
}
})) %>%
unnest(data) %>%
mutate(can_txt = paste0(candidate, ': ', scales::comma(votes, accuracy = 1))) %>%
group_by(county, Precinct) %>%
mutate(winning_share = votes[which(votes == max(votes))][1] / sum(votes),
label_init = paste(can_txt, collapse = '<br>')) %>%
mutate(fill_col = map2_chr(winner, winning_share, pol_pal_xl)) %>%
ungroup() %>%
rowwise() %>%
mutate(label = HTML(str_glue('<h4>{str_to_title(county)} - {Precinct}</h4>{label_init}'))) %>%
select(-label_init, -can_txt)
library(htmltools)
map_data_long <- map_data_long_chk %>%
nest(data = c(-Precinct, -county, -race)) %>%
mutate(winner = map_chr(data, function(x){
winner <- x %>%
filter(votes == max(votes)) %>%
pull(party)
if(length(winner) == 1){
winner
}else{
'Tie'
}
})) %>%
unnest(data) %>%
mutate(can_txt = paste0(candidate, ': ', scales::comma(votes, accuracy = 1))) %>%
group_by(county, Precinct) %>%
mutate(winning_share = votes[which(votes == max(votes))][1] / sum(votes),
label_init = paste(can_txt, collapse = '<br>')) %>%
mutate(fill_col = map2_chr(winner, winning_share, pol_pal_xl)) %>%
ungroup() %>%
rowwise() %>%
mutate(label = HTML(str_glue('<h4>{str_to_title(county)} - {Precinct}</h4>{label_init}'))) %>%
select(-label_init, -can_txt)
map_data_long
map_data <- map_data_long %>%
select(-party) %>%
pivot_wider(names_from = candidate, values_from = votes) %>%
left_join(tbl(db, 'fips') %>% collect()) %>%
mutate(VTDST = paste0('00',Precinct),
COUNTYFP = as.character(fips) %>% str_sub(3,5))
map_data
prec_map <- ky_precincts_22
map_data_shp <- prec_map %>%
mutate(county = str_to_lower(NAME),
COUNTYFP = as.character(COUNTYFP)) %>%
inner_join(map_data, by = c('COUNTYFP', 'VTDST'))
map_data_shp
leafletProxy("election_map", data = map_data_shp) %>%
clearShapes() %>%
addPolygons(
fillOpacity = .7,
color = ~fill_col,
weight = 1,
label = ~label,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "10px",
direction = "auto")
)
leaflet("election_map", data = map_data_shp) %>%
clearShapes() %>%
addPolygons(
fillOpacity = .7,
color = ~fill_col,
weight = 1,
label = ~label,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "10px",
direction = "auto")
)
leaflet(map_data_shp) %>%
clearShapes() %>%
addPolygons(
fillOpacity = .7,
color = ~fill_col,
weight = 1,
label = ~label,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "10px",
direction = "auto")
)
